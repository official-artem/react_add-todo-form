{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","React","memo","user","email","name","className","href","TodoInfo","todo","completed","title","id","cn","TodoList","todos","map","username","todosWithUsers","userId","array","usersFromServer","find","App","useState","setInput","selectedUserName","setUser","setTasks","errorForTitle","setErrorForTitle","errorForSelect","setErrorForUserSelect","Paper","action","method","onSubmit","event","defaultValue","preventDefault","Math","max","item","person","getUser","currenTodos","FormControl","error","TextField","label","type","size","value","onChange","target","FormHelperText","sx","width","InputLabel","Select","labelId","MenuItem","Button","variant","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fde12d45.chunk.js","sourcesContent":["import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = React.memo(\n  ({ user }) => {\n    const { email, name } = user;\n\n    return (\n      <a\n        className=\"UserInfo\"\n        href={`mailto:${email}`}\n      >\n        {name}\n      </a>\n    );\n  },\n);\n","import cn from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = React.memo(\n  ({ todo }) => {\n    const {\n      completed,\n      title,\n      user,\n      id,\n    } = todo;\n\n    return (\n      <article\n        data-id={id}\n        key={id}\n        className={cn(\n          'TodoInfo',\n          { 'TodoInfo--completed': completed },\n          { 'completed-task': completed },\n          { 'uncompleted-task': !completed },\n        )}\n      >\n        <h2 className=\"TodoInfo__title\">\n          {title}\n        </h2>\n\n        {user && <UserInfo user={user} />}\n      </article>\n    );\n  },\n);\n","import React, { FC } from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: FC<Props> = React.memo(\n  ({ todos }) => {\n    return (\n      <section className=\"TodoList\">\n        {todos.map(todo => (\n          <TodoInfo key={todo.id} todo={todo} />\n        ))}\n      </section>\n    );\n  },\n);\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React, { FC, useState } from 'react';\nimport './App.scss';\n\nimport Button from '@mui/material/Button';\nimport FormControl from '@mui/material/FormControl';\nimport TextField from '@mui/material/TextField';\nimport Select, { SelectChangeEvent } from '@mui/material/Select';\nimport MenuItem from '@mui/material/MenuItem';\nimport InputLabel from '@mui/material/InputLabel';\nimport FormHelperText from '@mui/material/FormHelperText';\nimport { Paper } from '@mui/material';\n\nimport { TodoList } from './components/TodoList';\nimport { Todo } from './types/Todo';\nimport { User } from './types/User';\n\nimport todosFromServer from './api/todos';\nimport usersFromServer from './api/users';\n\nconst getUserById = (array: User[], id: number) => {\n  return array.find(user => user.id === id) || null;\n};\n\nconst todosWithUsers: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(usersFromServer, todo.userId),\n}));\n\nexport const App: FC = () => {\n  const defaultValueInput = '';\n\n  const [title, setInput] = useState<string>(defaultValueInput);\n  const [selectedUserName, setUser] = useState<string>(defaultValueInput);\n  const [todos, setTasks] = useState<Todo[]>(todosWithUsers);\n  const [errorForTitle, setErrorForTitle] = useState<boolean>(false);\n  const [errorForSelect, setErrorForUserSelect] = useState<boolean>(false);\n\n  const clearForm = (defaultValue: string) => {\n    setInput(defaultValue);\n    setUser(defaultValue);\n  };\n\n  const getLargestUserId = (array: Todo[]) => {\n    return Math.max(...array.map(item => item.id));\n  };\n\n  const getUser = (array: User[]) => {\n    return array.find(person => (\n      person.name === selectedUserName\n    )) || null;\n  };\n\n  const handleSubmitForm = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    const fieldsNotEmpty = selectedUserName && title;\n\n    if (fieldsNotEmpty) {\n      const id = getLargestUserId(todos) + 1;\n      const user = getUser(usersFromServer);\n\n      setTasks(currenTodos => [\n        ...currenTodos,\n        {\n          id,\n          title,\n          completed: false,\n          userId: user ? user.id : null,\n          user,\n        }]);\n\n      clearForm(defaultValueInput);\n    }\n\n    if (selectedUserName === defaultValueInput) {\n      setErrorForUserSelect(true);\n    }\n\n    if (title === defaultValueInput) {\n      setErrorForTitle(true);\n    }\n  };\n\n  const handleUserSelect = (event: SelectChangeEvent) => {\n    const { value } = event.target;\n\n    setErrorForUserSelect(false);\n    setUser(value);\n  };\n\n  const handleInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    setInput(value);\n    setErrorForTitle(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <Paper className=\"container\">\n        <h1>Add todo form</h1>\n\n        <form\n          action=\"/api/users\"\n          method=\"POST\"\n          className=\"App__form\"\n          onSubmit={handleSubmitForm}\n        >\n\n          <FormControl\n            error={errorForSelect}\n          >\n            <div className=\"field\">\n\n              <TextField\n                label=\"Title: \"\n                className=\"titleInput\"\n                id=\"titleInput\"\n                name=\"titleInput\"\n                type=\"text\"\n                size=\"medium\"\n                value={title}\n                onChange={handleInput}\n                data-cy=\"titleInput\"\n                error={errorForSelect}\n              />\n              {errorForTitle\n                && (<FormHelperText>Please enter a title</FormHelperText>)}\n            </div>\n          </FormControl>\n\n          <FormControl\n            sx={{ width: '300px' }}\n            error={errorForSelect}\n          >\n            <InputLabel id=\"select-label\">User: </InputLabel>\n\n            <Select\n              labelId=\"select-label\"\n              name=\"userSelect\"\n              value={selectedUserName}\n              id=\"userSelect\"\n              onChange={handleUserSelect}\n              label=\"User: \"\n              data-cy=\"userSelect\"\n              error={errorForSelect}\n              size=\"medium\"\n            >\n              {/* <MenuItem value=\"\" disabled>\n                Choose a user\n              </MenuItem> */}\n\n              {usersFromServer.map((user) => (\n                <MenuItem\n                  key={user.id}\n                  value={user.name}\n                >\n                  {user.name}\n                </MenuItem>\n              ))}\n            </Select>\n\n            {errorForSelect && (\n              <FormHelperText>Please choose a user</FormHelperText>\n            )}\n          </FormControl>\n\n          <Button\n            data-cy=\"submitButton\"\n            type=\"submit\"\n            className=\"button\"\n            variant=\"contained\"\n          >\n            Add\n          </Button>\n        </form>\n        <TodoList todos={todos} />\n      </Paper>\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}