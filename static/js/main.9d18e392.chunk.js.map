{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","React","memo","user","email","name","className","href","TodoInfo","todo","completed","title","id","cn","TodoList","todos","map","username","todosWithUsers","userId","array","usersFromServer","find","App","useState","setInput","selectedUserName","setUser","setTasks","errorForTitle","setErrorForTitle","errorForSelect","setErrorForUserSelect","action","method","onSubmit","event","defaultValue","preventDefault","Math","max","item","person","getUser","currenTodos","htmlFor","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9d18e392.chunk.js","sourcesContent":["import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = React.memo(\n  ({ user }) => {\n    const { email, name } = user;\n\n    return (\n      <a\n        className=\"UserInfo\"\n        href={`mailto:${email}`}\n      >\n        {name}\n      </a>\n    );\n  },\n);\n","import cn from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = React.memo(\n  ({ todo }) => {\n    const {\n      completed,\n      title,\n      user,\n      id,\n    } = todo;\n\n    return (\n      <article\n        data-id={id}\n        key={id}\n        className={cn(\n          'TodoInfo',\n          { 'TodoInfo--completed': completed },\n        )}\n      >\n        <h2 className=\"TodoInfo__title\">\n          {title}\n        </h2>\n\n        {user && <UserInfo user={user} />}\n      </article>\n    );\n  },\n);\n","import React, { FC } from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: FC<Props> = React.memo(\n  ({ todos }) => {\n    return (\n      <section className=\"TodoList\">\n        {todos.map(todo => (\n          <TodoInfo key={todo.id} todo={todo} />\n        ))}\n      </section>\n    );\n  },\n);\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React, { FC, useState } from 'react';\nimport './App.scss';\nimport { TodoList } from './components/TodoList';\nimport { Todo } from './types/Todo';\nimport { User } from './types/User';\n\nimport todosFromServer from './api/todos';\nimport usersFromServer from './api/users';\n\nconst getUserById = (array: User[], id: number) => {\n  return array.find(user => user.id === id) || null;\n};\n\nconst todosWithUsers: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(usersFromServer, todo.userId),\n}));\n\nexport const App: FC = () => {\n  const defaultValueInput = '';\n\n  const [title, setInput] = useState<string>(defaultValueInput);\n  const [selectedUserName, setUser] = useState<string>(defaultValueInput);\n  const [todos, setTasks] = useState<Todo[]>(todosWithUsers);\n  const [errorForTitle, setErrorForTitle] = useState<boolean>(false);\n  const [errorForSelect, setErrorForUserSelect] = useState<boolean>(false);\n\n  const clearForm = (defaultValue: string) => {\n    setInput(defaultValue);\n    setUser(defaultValue);\n  };\n\n  const getLargestUserId = (array: Todo[]) => {\n    return Math.max(...array.map(item => item.id));\n  };\n\n  const getUser = (array: User[]) => {\n    return array.find(person => (\n      person.name === selectedUserName\n    )) || null;\n  };\n\n  const handleSubmitForm = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    const fieldsNotEmpty = selectedUserName && title;\n\n    if (fieldsNotEmpty) {\n      const id = getLargestUserId(todos) + 1;\n      const user = getUser(usersFromServer);\n\n      setTasks(currenTodos => [\n        ...currenTodos,\n        {\n          id,\n          title,\n          completed: false,\n          userId: user ? user.id : null,\n          user,\n        }]);\n\n      clearForm(defaultValueInput);\n    }\n\n    if (selectedUserName === defaultValueInput) {\n      setErrorForUserSelect(true);\n    }\n\n    if (title === defaultValueInput) {\n      setErrorForTitle(true);\n    }\n  };\n\n  const handleUserSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const { value } = event.target;\n\n    setErrorForUserSelect(false);\n    setUser(value);\n  };\n\n  const handleInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    setInput(value);\n    setErrorForTitle(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmitForm}\n      >\n        <div className=\"field\">\n          <label\n            htmlFor=\"titleInput\"\n          >\n            {'Title: '}\n          </label>\n\n          <input\n            id=\"titleInput\"\n            name=\"titleInput\"\n            type=\"text\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={handleInput}\n            data-cy=\"titleInput\"\n          />\n          {errorForTitle\n            && (<span className=\"error\">Please enter a title</span>)}\n        </div>\n\n        <div className=\"field\">\n          <label\n            htmlFor=\"userSelect\"\n          >\n            {'User: '}\n          </label>\n\n          <select\n            onChange={handleUserSelect}\n            name=\"userSelect\"\n            value={selectedUserName}\n            id=\"userSelect\"\n            data-cy=\"userSelect\"\n          >\n            <option value=\"\" disabled>\n              Choose a user\n            </option>\n\n            {usersFromServer.map((user) => (\n              <option\n                key={user.id}\n                value={user.name}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {errorForSelect && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n\n        </div>\n\n        <button\n          data-cy=\"submitButton\"\n          type=\"submit\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}